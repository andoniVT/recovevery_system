El analisis de algoritmos es una parte importante de la Teoria de complejidad computacional mas amplia, que provee estimaciones teoricas para los recursos que necesita cualquier algoritmo que resuelva un problema computacional dado. Estas estimaciones resultan ser bastante utiles en la busqueda de algoritmos eficientes.
A la hora de realizar un analisis teorico de algoritmos es comun calcular su complejidad en un sentido asintotico, es decir, para un tamano de entrada suficientemente grande. La cota superior asintotica, y las notaciones omega (cota inferior) y theta (caso promedio) se usan con esa finalidad. Por ejemplo, la busqueda binaria decimos que se ejecuta en una cantidad de pasos proporcional a un logaritmo, en O(log(n)), coloquialmente "en tiempo logaritmico". Normalmente las estimaciones asintoticas se utilizan porque diferentes implementaciones del mismo algoritmo no tienen porque tener la misma eficiencia. No obstante la eficiencia de dos implementaciones "razonables" cualesquiera de un algoritmo dado estan relacionadas por una constante multiplicativa llamada constante oculta.
La medida exacta (no asintotica) de la eficiencia a veces puede ser computada pero para ello suele hacer falta aceptar supuestos acerca de la implementacion concreta del algoritmo, llamada modelo de computacion. Un modelo de computacion puede definirse en terminos de un ordenador abstracto, como la Maquina de Turing, y/o postulando que ciertas operaciones se ejecutan en una unidad de tiempo. Por ejemplo, si al conjunto ordenado al que aplicamos una busqueda binaria tiene n elementos, y podemos garantizar que una unica busqueda binaria puede realizarse en un tiempo unitario, entonces se requieren como mucho log2 N + 1 unidades de tiempo para devolver una respuesta.
Las medidas exactas de eficiencia son utiles para quienes verdaderamente implementan y usan algoritmos, porque tienen mas precision y asi les permite saber cuanto tiempo pueden suponer que tomara la ejecucion. Para algunas personas, como los desarrolladores de videojuegos, una constante oculta puede significar la diferencia entre exito y fracaso.
Las estimaciones de tiempo dependen de como definamos un paso. Para que el analisis tenga sentido, debemos garantizar que el tiempo requerido para realizar un paso este acotado superiormente por una constante. Hay que mantenerse precavido en este terreno; por ejemplo, algunos analisis cuentan con que la suma de dos numeros se hace en un paso. Este supuesto puede no estar garantizado en ciertos contextos. Si por ejemplo los numeros involucrados en la computacion pueden ser arbitrariamente grandes, dejamos de poder asumir que la adicion requiere un tiempo constante (usando papel y lapiz, compara el tiempo que necesitas para sumar dos enteros de 2 digitos cada uno y el necesario para hacerlo con enteros de 1000 digitos).
